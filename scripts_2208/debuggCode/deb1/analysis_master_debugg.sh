#!/bin/bash

echo "Analysis master"


##Set variables, get raw data from .hepmc and rewrites them adding observables z_origin and t_gamma
# echo "01 analisis full"
#python 01_making_opt_hepmc.py

## Run the modified Delphes through .hepmc
# echo "02"
#python 02_run_Delphes.py "$3" "$2"

## Extract important data from .root generated by Delphes
# echo "03 final info extraction"
#python 03_extracting_root.py

#!Start of debugging
#The following code was constructed to review the analysis and debugging. It can be ignored for a more direct approach and skip to 04_bins_after_Delphes.py
# echo "04 basic analysis"
#python 04x_reduce.py             #Only if needed, reduce number of events
#python 04c_deltaReflow.py         #Plot deltaR for eflowPhotons and eflowTracks
#python 04_deltaR_manual_noindex.py
#python 04_deltaR_dfpickle_opt.py
#python 04_deltaR_correct_merge.py

# The following lines are for analysing an optimal deltaR min in the delphes cards
#python 04_deltaR_run.py            #Analise different deltarR from different delphes 
#python 04_deltaR_run_merge.py
#python 04_ph_displaced.py
#python 04_ph_displaced_new.py #Analysis of only deltaR minimum with optimal deltaR

#!Finish of debugging

## Apply the analysis over "experimental" data
# echo "04 bins after Delphes"
#python 04_bins_after_Delphes.py "$1"


#compare
#python comparehepmc.py
#python comparewrite.py

#!final

#python comparewriteoptm.py

#python comparehepmc_new.py
#python comparewrite.py
# echo "07"
#python 07_making_graphs.py
# echo "07a"
#python "07a_making_graphs (copy).py"
# echo "07a_alpha_it"
#python 07a_making_graphs-copy-_alpha_it.py

# echo "09"
#python 09_contour_graphs.py